"""
Django settings for Scouts project.

Generated by 'django-admin startproject' using Django 4.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import os.path
from pathlib import Path

import cloudinary
import cloudinary.uploader
import cloudinary.api
from Scouts.middleware import handle_exception
from django.urls import reverse_lazy

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool(os.environ.get('DEBUG'))
# DEBUG = False
# TODO replace on release!!!
ALLOWED_HOSTS = os.environ.get('ALLOWED_HOSTS', '').split(' ')

# Application definition

INSTALLED_APPS = [
    "admin_interface",
    "colorfield",
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'Scouts.web',
    'Scouts.accounts',
    'Scouts.account_profile',
    'Scouts.kids',
    'Scouts.items',
    'Scouts.orders',
    'Scouts.payments',
    'cloudinary'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'Scouts.middleware.handle_exception'
    # 'Scouts.custom_middleware.Correlation',
    # 'Scouts.custom_middleware.CustomMiddleware',
]
# X_FRAME_OPTIONS = "SAMEORIGIN"  #from custom admin
# SILENCED_SYSTEM_CHECKS = ["security.W019"]  #from custom admin
ROOT_URLCONF = 'Scouts.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

            ],
            'libraries': {
                'custom_templatetags': 'Scouts.accounts.templatetags.placeholders',

            }

        },
    },
]

WSGI_APPLICATION = 'Scouts.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'database_name_new',
        'USER': 'sakral',
        'PASSWORD': 'bozhimirov',
        'HOST': '127.0.0.1',
        'PORT': '5432',
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LOGGING_LEVEL = "DEBUG"

# 'structlog'  consider using it
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format':
            # '{levelname} {asctime} {module} {process:d} {thread:d} {message} {correlation_id} '
                '{levelname} {asctime} {module} {process:d} {thread:d} {message}  '
                '{filename} {lineno} - {funcName}',
            'style': '{',
        },
        'simple': {
            # 'format': '%(levelname)s %(asctime)s %(module)s %(message)s {\'correlationId\':\'%(correlation_id)s\'}',
            'format': '%(levelname)s %(asctime)s %(module)s %(message)s ',
        },
    },
    # 'filters': {
    #     'correlation_filter': {
    #         '()': 'Scouts.custom_middleware.CorrelationFilter',
    #     }
    # },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            # 'filters': ['correlation_filter'],
            'class': 'logging.StreamHandler',
            'formatter': 'simple'

        },
        'file': {
            'level': 'DEBUG',
            # 'filters': ['correlation_filter'],
            'class': 'logging.FileHandler',
            'filename': '/Users/stani/PycharmProjects/PomarinaScouts/logs.txt',
            'formatter': 'verbose'
        },
        # 'mail_admins': {
        #     'level': 'ERROR',
        #     'class': 'django.utils.log.AdminEmailHandler',
        #     'filters': ['require_debug_false'],
        #
        # },
    },
    'loggers': {
        'django.request': {
            'handlers': ['console', 'file'],
            'level': 'DEBUG',  # change debug level as appropiate
            'propagate': True,
        },
    },
    'root': {
        'handlers': ['console', 'file'],
        'level': 'DEBUG',
    },

}

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'
# STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = (
    BASE_DIR / 'static',
)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR / 'media')

# CLOUDINARY_URL = os.environ.get('CLOUDINARY_URL')

cloudinary.config(
    cloud_name=os.environ.get('cloud_name'),
    api_key=os.environ.get('api_key'),
    api_secret=os.environ.get('api_secret'),
    secure=True
)

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'accounts.AppUser'
USERNAME_FIELD = 'email'

LOGIN_URL = reverse_lazy('login user')

LOGIN_REDIRECT_URL = reverse_lazy('index')

LOGOUT_REDIRECT_URL = reverse_lazy('index')

EMAIL_HOST = os.environ.get('EMAIL_HOST')
EMAIL_PORT = os.environ.get('EMAIL_PORT')
EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')
EMAIL_USE_TLS = os.environ.get('EMAIL_USE_SSL')

DEFAULT_FROM_EMAIL = os.environ.get('DEFAULT_FROM_EMAIL')
